<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://rodolfoamancio.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rodolfoamancio.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2022-11-26T18:32:35+00:00</updated><id>https://rodolfoamancio.github.io/feed.xml</id><title type="html">Rodolfo Amancio</title><subtitle>My porfolio page. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Moral dilemmas, machine learning and misconceptions</title><link href="https://rodolfoamancio.github.io/blog/2022/trolley-problem/" rel="alternate" type="text/html" title="Moral dilemmas, machine learning and misconceptions"/><published>2022-11-20T00:00:00+00:00</published><updated>2022-11-20T00:00:00+00:00</updated><id>https://rodolfoamancio.github.io/blog/2022/trolley-problem</id><content type="html" xml:base="https://rodolfoamancio.github.io/blog/2022/trolley-problem/"><![CDATA[<p>The trolley problem is a classical ethical dilemma with no simple answer. It has been features in multiple pop culture productions such as the movie The Dark Knight or the TV series The Good Place.</p> <p>Here is how the story goes. Suppose you are standing next to a lever that can shift the path taken by a trolley. Initially the trolley is on a track that will lead it in the direction of five people who cannot escape the incoming thread. If you do nothing these five people will die. However, if you pull the trigger the trolley is lead to a different path and will hit and kill only one person. This begs several questions:</p> <ul> <li>Should you pull the trigger?</li> <li>Is it ethical to choose to kill one person in order to save five?</li> <li>Or the opposite, to spare the life of one person at the cost of another five.</li> </ul> <p align="center"> <img src="https://pyxis.nymag.com/v1/imgs/08a/3a4/0b0584bf02449513f879837cc95f19e7e0-09-trolley.rhorizontal.w700.jpg" alt="The trolley problem"/> <br/> <em>The trolley problem in its classical variation. Image obtained from: https://nymag.com/intelligencer/2016/08/trolley-problem-meme-tumblr-philosophy.html</em> </p> <p>Awald et al (2020) have designed an online survey where participants are asked to answer to different situations. Interestingly, alternative versions of the same problem are presented. This will be further explained ahead.</p> <p>The original paper can be found here:</p> <p>https://www.pnas.org/doi/10.1073/pnas.1911517117</p> <p>The authors have made the data available on:</p> <p>https://osf.io/mxa6z/?view_only=33719a32d86a4ec186a21287a233040c</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">missingno</span>
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">mannwhitneyu</span><span class="p">,</span> <span class="n">ttest_ind</span>
<span class="kn">from</span> <span class="nn">statsmodels.stats.proportion</span> <span class="kn">import</span> <span class="n">proportion_confint</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span><span class="p">,</span> <span class="n">GridSearchCV</span>
<span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>
<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>
<span class="kn">from</span> <span class="nn">sklearn.tree</span> <span class="kn">import</span> <span class="n">DecisionTreeClassifier</span>
<span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">RandomForestClassifier</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">roc_auc_score</span><span class="p">,</span> <span class="n">precision_score</span><span class="p">,</span> <span class="n">recall_score</span><span class="p">,</span> <span class="n">f1_score</span><span class="p">,</span> <span class="n">balanced_accuracy_score</span><span class="p">,</span> <span class="n">roc_curve</span>

</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="n">use</span><span class="p">(</span><span class="s">"ggplot"</span><span class="p">)</span>
</code></pre></div></div> <h2 id="1---data-acquisition">1 - Data acquisition</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_shared_data_demographics_raw</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"../data/Shared_data_responses_demographics.csv"</span><span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_shared_data_demographics_raw</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>UserIP_Anonymized</th> <th>Scenario</th> <th>survey.age</th> <th>survey.gender</th> <th>survey.education</th> <th>survey.political</th> <th>survey.religious</th> <th>country_code</th> <th>Outcome</th> <th>Continent</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>0002ae2d</td> <td>Footbridge</td> <td>19</td> <td>Women</td> <td>College</td> <td>0.56</td> <td>0.0</td> <td>GB</td> <td>0</td> <td>Europe</td> </tr> <tr> <th>1</th> <td>0002ae2d</td> <td>Loop</td> <td>19</td> <td>Women</td> <td>College</td> <td>0.56</td> <td>0.0</td> <td>GB</td> <td>1</td> <td>Europe</td> </tr> </tbody> </table> </div> <p>The dataframe we will use for the analysis is df_shared_data_demographics, it shows the results for the survey. Each line corresponds to a participant response, three possible situations were presented (“Scenario” column) for each possible intervention a person could do:</p> <p align="center"> <img src="https://dailynous.com/wp-content/uploads/2020/01/switch-loop-footbridge-2.jpg" alt="Possible scenarios"/> <br/> <em> The three scenarios for the trolley problem. Obatined from https://dailynous.com/2020/01/22/learned-70000-responses-trolley-scenarios/ </em> </p> <p>From the image above we can discuss the three situations presented in the survey:</p> <p><em>Switch</em>: in this first version, the intervention of the participant shifts the path of the trolley leading it to kill only one person instead of five</p> <p><em>Loop</em>: now, the situation becomes a little more complicated, in order to save the five workers, the trolley must be lead to a path with only one person. The impact will lead the trolley to stop.</p> <p><em>Footbridge</em>: now, once again the option involves the impact of the trolley with a person who is standing on the bride. He is a big person, and the shock will be enough to stop the menace from killing the five people. But now there is no lever available, it is necessary to personally push the person, which involves physical contact.</p> <p>Additional information are presented to each participant:</p> <ul> <li>age on “survey.age”,</li> <li>gender on “survey.gender”</li> <li>education on “survey.education”</li> <li>political on “survey.political”, ranging from 0 to 1, corresponding to conservative to progressive</li> <li>religious views on “survey.religious”, ranging from 0 to 1, corresponding to non-religious to religious</li> <li>country code on “country_code”</li> <li>continent on “Continent”</li> <li>Outcome on “outcome”: this column indicates the action chosen by the participant, 0 if the person would not intervene and 1 otherwise</li> <li>“UserIP_Anonymized” is an individual ID for each person</li> </ul> <p>Based on this data we can study the characteristics of each group. Following, we can try and answer: based on a give set of attributes (age, gender…) will the person intervene or not.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_shared_data_demographics_raw</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>survey.age</th> <th>survey.political</th> <th>survey.religious</th> <th>Outcome</th> </tr> </thead> <tbody> <tr> <th>count</th> <td>59159.000000</td> <td>59159.000000</td> <td>59159.000000</td> <td>59159.000000</td> </tr> <tr> <th>mean</th> <td>28.067834</td> <td>0.628667</td> <td>0.243850</td> <td>0.688889</td> </tr> <tr> <th>std</th> <td>10.213054</td> <td>0.263498</td> <td>0.302178</td> <td>0.462952</td> </tr> <tr> <th>min</th> <td>18.000000</td> <td>0.000000</td> <td>0.000000</td> <td>0.000000</td> </tr> <tr> <th>25%</th> <td>21.000000</td> <td>0.500000</td> <td>0.000000</td> <td>0.000000</td> </tr> <tr> <th>50%</th> <td>25.000000</td> <td>0.620000</td> <td>0.070000</td> <td>1.000000</td> </tr> <tr> <th>75%</th> <td>32.000000</td> <td>0.840000</td> <td>0.500000</td> <td>1.000000</td> </tr> <tr> <th>max</th> <td>89.000000</td> <td>1.000000</td> <td>1.000000</td> <td>1.000000</td> </tr> </tbody> </table> </div> <h2 id="2---data-cleaning">2 - Data cleaning</h2> <h3 id="21---missing-data">2.1 - Missing data</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">missingno</span><span class="p">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df_shared_data_demographics_raw</span><span class="p">,</span> <span class="n">sort</span><span class="o">=</span><span class="s">"ascending"</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;AxesSubplot:&gt;
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_11_1-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_11_1-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_11_1-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_11_1.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Both dataframes present no missing data, from the previous visualizations all columns are complete for both objects.</p> <h3 id="22---basic-cleaning-and-column-selection">2.2 - Basic cleaning and column selection</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_shared_data_demographics_clean</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_raw</span>
    <span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span>
        <span class="s">"UserIP_Anonymized"</span><span class="p">:</span><span class="s">"id"</span><span class="p">,</span>
        <span class="s">"Scenario"</span><span class="p">:</span><span class="s">"scenario"</span><span class="p">,</span>
        <span class="s">"survey.age"</span><span class="p">:</span><span class="s">"age"</span><span class="p">,</span>
        <span class="s">"survey.gender"</span><span class="p">:</span><span class="s">"gender"</span><span class="p">,</span>
        <span class="s">"survey.education"</span><span class="p">:</span><span class="s">"education"</span><span class="p">,</span>
        <span class="s">"survey.political"</span><span class="p">:</span><span class="s">"political"</span><span class="p">,</span>
        <span class="s">"survey.religious"</span><span class="p">:</span><span class="s">"religious"</span><span class="p">,</span>
        <span class="s">"country_code"</span><span class="p">:</span><span class="s">"country"</span><span class="p">,</span>
        <span class="s">"Outcome"</span><span class="p">:</span><span class="s">"outcome"</span><span class="p">,</span>
        <span class="s">"Continent"</span><span class="p">:</span><span class="s">"continent"</span>
    <span class="p">})</span>
<span class="p">)</span>
</code></pre></div></div> <h2 id="3---data-visualization">3 - Data visualization</h2> <h3 id="31---age-pyramid">3.1 - Age pyramid</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_age_pyramid</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">age_range</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">pd</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"age"</span><span class="p">],</span> <span class="n">bins</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">101</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">right</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="p">[</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s">-</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">5</span><span class="si">}</span><span class="s">"</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">5</span><span class="p">)])</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"age_range"</span><span class="p">,</span> <span class="s">"gender"</span><span class="p">,</span> <span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">number_people</span><span class="o">=</span><span class="p">(</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"nunique"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="n">y_aux</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">df_age_pyramid</span><span class="p">[</span><span class="s">"age_range"</span><span class="p">].</span><span class="n">nunique</span><span class="p">())</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_age_pyramid</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">aux_data</span> <span class="o">=</span> <span class="n">df_age_pyramid</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">).</span><span class="n">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="s">"scenario"</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">barh</span><span class="p">(</span>
        <span class="n">y</span><span class="o">=</span><span class="n">y_aux</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Men' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
        <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Men - outcome = 0"</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">barh</span><span class="p">(</span>
        <span class="n">y</span><span class="o">=</span><span class="n">y_aux</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Men' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">left</span><span class="o">=</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Men' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
        <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Men - outcome = 1"</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.9</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">barh</span><span class="p">(</span>
        <span class="n">y</span><span class="o">=</span><span class="n">y_aux</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=-</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Women' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
        <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Women - outcome = 0"</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">barh</span><span class="p">(</span>
        <span class="n">y</span><span class="o">=</span><span class="n">y_aux</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=-</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Women' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">left</span><span class="o">=-</span><span class="n">aux_data</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">"gender == 'Women' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"number_people"</span><span class="p">],</span>
        <span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
        <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Women - outcome = 1"</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.9</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">5001</span><span class="p">,</span> <span class="mi">1000</span><span class="p">))</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">5001</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_yticks</span><span class="p">(</span><span class="n">y_aux</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_yticklabels</span><span class="p">(</span><span class="n">df_age_pyramid</span><span class="p">[</span><span class="s">"age_range"</span><span class="p">].</span><span class="n">unique</span><span class="p">(),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">18</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Number of people"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Age range"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_18_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_18_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_18_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_18_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Above it is possible to see the age pyramid clustered for the three scenarios. The lighter colors indicate the participant didn’t take the action, while the darker one indicates he/she did take the action. It is noticeable that interventions are more common for the Switch, and very less frequent for the Footbridge given the same gender and age range.</p> <p>The diversity of the participants is also unbalanced, there are more men than women in the survey. Additionally, the participants tend to be young adults.</p> <p>Following, let’s investigate if the responses are statistically associated with gender and age.</p> <h3 id="32---age-and-gender-statistical-tests">3.2 - Age and gender statistical tests</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_age_per_group</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">age_list</span><span class="o">=</span><span class="p">(</span><span class="s">"age"</span><span class="p">,</span> <span class="nb">list</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>

<span class="n">BINS</span> <span class="o">=</span> <span class="mi">70</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_age_per_group</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">y_0</span><span class="p">,</span> <span class="n">x_0</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_age_per_group</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"age_list"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Age - outcome == 0"</span>
    <span class="p">)</span>

    <span class="n">y_1</span><span class="p">,</span> <span class="n">x_1</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_age_per_group</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"age_list"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Age - outcome == 1"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Age"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Probability density"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlim</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">90</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_22_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_22_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_22_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_22_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>From the age distribution shown above, the population is very centered around 20 year, and the data does not seem to follow a normal-like distribution as it typically happens with population analysis. In this case, the data seems to have an exponential-like behavior.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_gender_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"gender"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">number_people</span><span class="o">=</span><span class="p">(</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"nunique"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">total_scenario</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])[</span><span class="s">"number_people"</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nb">sum</span><span class="p">()),</span>
        <span class="n">lower_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">])[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">upper_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">])[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">relative_frequency</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">],</span>
        <span class="n">interval</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s">"upper_bound"</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">"lower_bound"</span><span class="p">]</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_gender_scenario</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Men - outcome = 0"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"interval"</span><span class="p">],</span>
        <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
        <span class="n">ecolor</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Men - outcome = 1"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_gender_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"gender == 'Men' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"interval"</span><span class="p">],</span>
        <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
        <span class="n">ecolor</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Outcome"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Relative frequency/%"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_25_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_25_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_25_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_25_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The graph above displays the relative frequency for Men grouped by each outcome in each scenario. One can notice that for the Footbridge case, there seems to be no significant difference between the frequencies of men at each outcome. However, for the other two scenarios, men seem to be less prone to take an action.</p> <h3 id="33---political-views">3.3 - Political views</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_politics_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">political</span><span class="o">=</span><span class="p">(</span><span class="s">"political"</span><span class="p">,</span> <span class="nb">list</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="n">BINS</span> <span class="o">=</span> <span class="mi">50</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_politics_scenario</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">y0</span><span class="p">,</span> <span class="n">x0</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_politics_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"political"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Outcome == 0"</span>
    <span class="p">)</span>

    <span class="n">y1</span><span class="p">,</span> <span class="n">x1</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_politics_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"political"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Outcome == 1"</span>
    <span class="p">)</span>

    <span class="n">_</span><span class="p">,</span> <span class="n">p_value</span> <span class="o">=</span> <span class="n">ttest_ind</span><span class="p">(</span>
        <span class="n">df_politics_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"political"</span><span class="p">].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">df_politics_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"political"</span><span class="p">].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">annotate</span><span class="p">(</span>
        <span class="sa">f</span><span class="s">"p-value = </span><span class="si">{</span><span class="n">np</span><span class="p">.</span><span class="nb">round</span><span class="p">(</span><span class="n">p_value</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="s">"</span><span class="p">,</span>
        <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.75</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">([</span><span class="n">x0</span><span class="p">,</span> <span class="n">x1</span><span class="p">]),</span> <span class="mf">0.9</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">([</span><span class="n">y0</span><span class="p">,</span> <span class="n">y1</span><span class="p">]))</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Political views"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Probability density"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_29_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_29_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_29_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_29_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">political_views</span><span class="o">=</span><span class="p">(</span><span class="s">"political"</span><span class="p">,</span> <span class="s">"mean"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">pivot</span><span class="p">(</span>
        <span class="n">index</span><span class="o">=</span><span class="s">"scenario"</span><span class="p">,</span>
        <span class="n">columns</span><span class="o">=</span><span class="s">"outcome"</span><span class="p">,</span>
        <span class="n">values</span><span class="o">=</span><span class="s">"political_views"</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th>outcome</th> <th>0</th> <th>1</th> </tr> <tr> <th>scenario</th> <th></th> <th></th> </tr> </thead> <tbody> <tr> <th>Footbridge</th> <td>0.629286</td> <td>0.628529</td> </tr> <tr> <th>Loop</th> <td>0.611545</td> <td>0.633625</td> </tr> <tr> <th>Switch</th> <td>0.608016</td> <td>0.632802</td> </tr> </tbody> </table> </div> <p>The previous histogram shows the dispersion of the political views under each scenario and separated by outcomes. For the footbridge situation, the difference in means is not statistically significant. However, for other cases, the group of people how opt for a positive action (outcome = 1) seems to be more aligned with progressive views as the p-values indicated in the plot indicates alongside the previous table.</p> <h3 id="34---religious-views">3.4 - Religious views</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_religious_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">religious</span><span class="o">=</span><span class="p">(</span><span class="s">"religious"</span><span class="p">,</span> <span class="nb">list</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="n">BINS</span> <span class="o">=</span> <span class="mi">50</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_religious_scenario</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">y0</span><span class="p">,</span> <span class="n">x0</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_religious_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"religious"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Outcome == 0"</span>
    <span class="p">)</span>

    <span class="n">y1</span><span class="p">,</span> <span class="n">x1</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span>
        <span class="n">df_religious_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"religious"</span><span class="p">],</span>
        <span class="n">bins</span><span class="o">=</span><span class="n">BINS</span><span class="p">,</span>
        <span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Outcome == 1"</span>
    <span class="p">)</span>

    <span class="n">_</span><span class="p">,</span> <span class="n">p_value</span> <span class="o">=</span> <span class="n">ttest_ind</span><span class="p">(</span>
        <span class="n">df_religious_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 0"</span><span class="p">)[</span><span class="s">"religious"</span><span class="p">].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">df_religious_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">' &amp; outcome == 1"</span><span class="p">)[</span><span class="s">"religious"</span><span class="p">].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">annotate</span><span class="p">(</span>
        <span class="sa">f</span><span class="s">"p-value = </span><span class="si">{</span><span class="n">np</span><span class="p">.</span><span class="nb">round</span><span class="p">(</span><span class="n">p_value</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="s">"</span><span class="p">,</span>
        <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.75</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">([</span><span class="n">x0</span><span class="p">,</span> <span class="n">x1</span><span class="p">]),</span> <span class="mf">0.9</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">([</span><span class="n">y0</span><span class="p">,</span> <span class="n">y1</span><span class="p">]))</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Religious views"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Probability density"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_34_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_34_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_34_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_34_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">religous_views</span><span class="o">=</span><span class="p">(</span><span class="s">"religious"</span><span class="p">,</span> <span class="s">"mean"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">pivot</span><span class="p">(</span>
        <span class="n">index</span><span class="o">=</span><span class="s">"scenario"</span><span class="p">,</span>
        <span class="n">columns</span><span class="o">=</span><span class="s">"outcome"</span><span class="p">,</span>
        <span class="n">values</span><span class="o">=</span><span class="s">"religous_views"</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th>outcome</th> <th>0</th> <th>1</th> </tr> <tr> <th>scenario</th> <th></th> <th></th> </tr> </thead> <tbody> <tr> <th>Footbridge</th> <td>0.239746</td> <td>0.248050</td> </tr> <tr> <th>Loop</th> <td>0.247548</td> <td>0.242242</td> </tr> <tr> <th>Switch</th> <td>0.238063</td> <td>0.245603</td> </tr> </tbody> </table> </div> <p>Interestingly, in the case of religion, there seems to be no statistically significant difference between the views of people who don’t take the action (outcome == 0) and those who take (outcome == 1). The most critical case occurs for the footbridge scenario, as the p-value calculated through t-test is relatively small (0.06). In this case, the people who take the action are on average more religious than those who do not take it.</p> <h3 id="35---education">3.5 - Education</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_education_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"education"</span><span class="p">,</span> <span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">number_people</span> <span class="o">=</span> <span class="p">(</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"nunique"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">total_scenario</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"scenario"</span><span class="p">,</span> <span class="s">"outcome"</span><span class="p">])</span>
            <span class="p">[</span><span class="s">"number_people"</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span>
                <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nb">sum</span><span class="p">()</span>
            <span class="p">)</span>
        <span class="p">),</span>
        <span class="n">lower_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">upper_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">relative_frequency</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="mi">100</span><span class="o">*</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
            <span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s">"total_scenario"</span><span class="p">]</span>
        <span class="p">),</span>
        <span class="n">interval</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s">"upper_bound"</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">"lower_bound"</span><span class="p">]</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_education_scenario</span><span class="p">.</span><span class="n">tail</span><span class="p">()</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>education</th> <th>scenario</th> <th>outcome</th> <th>number_people</th> <th>total_scenario</th> <th>lower_bound</th> <th>upper_bound</th> <th>relative_frequency</th> <th>interval</th> </tr> </thead> <tbody> <tr> <th>7</th> <td>No College</td> <td>Footbridge</td> <td>1</td> <td>2826</td> <td>9028</td> <td>30.346053</td> <td>32.259175</td> <td>31.302614</td> <td>1.913122</td> </tr> <tr> <th>8</th> <td>No College</td> <td>Loop</td> <td>0</td> <td>1271</td> <td>4736</td> <td>25.575006</td> <td>28.098980</td> <td>26.836993</td> <td>2.523974</td> </tr> <tr> <th>9</th> <td>No College</td> <td>Loop</td> <td>1</td> <td>4021</td> <td>14681</td> <td>26.667769</td> <td>28.110516</td> <td>27.389142</td> <td>1.442747</td> </tr> <tr> <th>10</th> <td>No College</td> <td>Switch</td> <td>0</td> <td>791</td> <td>3199</td> <td>23.231470</td> <td>26.221484</td> <td>24.726477</td> <td>2.990014</td> </tr> <tr> <th>11</th> <td>No College</td> <td>Switch</td> <td>1</td> <td>4588</td> <td>16438</td> <td>27.225220</td> <td>28.596656</td> <td>27.910938</td> <td>1.371436</td> </tr> </tbody> </table> </div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_education_scenario</span><span class="p">[</span><span class="s">"scenario"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"College - outcome = 0"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 0 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"interval"</span><span class="p">],</span>
        <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
        <span class="n">ecolor</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"College - outcome = 1"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_education_scenario</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"education == 'College' &amp; outcome == 1 &amp; scenario == '</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">'"</span><span class="p">)[</span><span class="s">"interval"</span><span class="p">],</span>
        <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
        <span class="n">ecolor</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Outcome"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Relative frequency/%"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"Scenario: </span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_40_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_40_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_40_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_40_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Analyzing the education distribution among the participants, one can notice that there seems to be no significant difference between the relative frequencies of college-educated people and non-college educated people for the Loop and Switch scenarios. However, for the footbridge case, the frequency of college educated people seems a bit smaller among those who take the action.</p> <h3 id="36-regions">3.6 Regions</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_shared_data_demographics_clean</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>id</th> <th>scenario</th> <th>age</th> <th>gender</th> <th>education</th> <th>political</th> <th>religious</th> <th>country</th> <th>outcome</th> <th>continent</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>0002ae2d</td> <td>Footbridge</td> <td>19</td> <td>Women</td> <td>College</td> <td>0.56</td> <td>0.0</td> <td>GB</td> <td>0</td> <td>Europe</td> </tr> <tr> <th>1</th> <td>0002ae2d</td> <td>Loop</td> <td>19</td> <td>Women</td> <td>College</td> <td>0.56</td> <td>0.0</td> <td>GB</td> <td>1</td> <td>Europe</td> </tr> </tbody> </table> </div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_country_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"country"</span><span class="p">,</span> <span class="s">"id"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">take_any_action</span> <span class="o">=</span> <span class="p">(</span><span class="s">"outcome"</span><span class="p">,</span> <span class="s">"max"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">"country"</span><span class="p">)</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">take_any_action</span> <span class="o">=</span> <span class="p">(</span><span class="s">"take_any_action"</span><span class="p">,</span> <span class="s">"sum"</span><span class="p">),</span>
        <span class="n">number_people</span> <span class="o">=</span> <span class="p">(</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"nunique"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">relative_frequency</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="mi">100</span><span class="o">*</span><span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">]</span>
            <span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">),</span>
        <span class="n">lower_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">upper_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">interval</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"upper_bound"</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">"lower_bound"</span><span class="p">]</span>
        <span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">"relative_frequency"</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">BLOCKS</span> <span class="o">=</span> <span class="mi">3</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="n">BLOCKS</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">22</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">array_split</span><span class="p">(</span><span class="n">df_country_scenario</span><span class="p">,</span> <span class="n">BLOCKS</span><span class="p">)):</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bar</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
        <span class="n">height</span><span class="o">=</span><span class="n">data</span><span class="p">[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
        <span class="n">width</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
        <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span>
    <span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlim</span><span class="p">(</span>
        <span class="n">np</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">),</span>
        <span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">"country"</span><span class="p">],</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Country"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Relative frequency/%"</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="s">"Relative frequency of positive respondents per country"</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_45_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_45_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_45_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_45_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Above, the frequency of positive respondents per country is presented. Here positive respondent is defined as someone who gave a positive answer for at least one of the three scenarios. Unfortunately, some countries have a very small sample of participants, as a result, the calculated frequency is not significant. So, it should be more interesting to investigate the result per continent.</p> <h3 id="37---continent">3.7 - Continent</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_continent_scenario</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_shared_data_demographics_clean</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"continent"</span><span class="p">,</span> <span class="s">"id"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">take_any_action</span> <span class="o">=</span> <span class="p">(</span><span class="s">"outcome"</span><span class="p">,</span> <span class="s">"max"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">"continent"</span><span class="p">)</span>
    <span class="p">.</span><span class="n">agg</span><span class="p">(</span>
        <span class="n">take_any_action</span> <span class="o">=</span> <span class="p">(</span><span class="s">"take_any_action"</span><span class="p">,</span> <span class="s">"sum"</span><span class="p">),</span>
        <span class="n">number_people</span> <span class="o">=</span> <span class="p">(</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"nunique"</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">relative_frequency</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="mi">100</span><span class="o">*</span><span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">]</span>
            <span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">),</span>
        <span class="n">lower_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">upper_bound</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="mi">100</span><span class="o">*</span><span class="n">proportion_confint</span><span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"take_any_action"</span><span class="p">],</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"number_people"</span><span class="p">]</span>
        <span class="p">)[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">interval</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="p">(</span>
            <span class="n">df</span><span class="p">[</span><span class="s">"upper_bound"</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">"lower_bound"</span><span class="p">]</span>
        <span class="p">)</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">"relative_frequency"</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>

<span class="n">ax</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_continent_scenario</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="n">df_continent_scenario</span><span class="p">[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
    <span class="n">width</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
    <span class="n">align</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
    <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">errorbar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_continent_scenario</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">df_continent_scenario</span><span class="p">[</span><span class="s">"relative_frequency"</span><span class="p">],</span>
    <span class="n">yerr</span><span class="o">=</span><span class="n">df_continent_scenario</span><span class="p">[</span><span class="s">"interval"</span><span class="p">],</span>
    <span class="n">ecolor</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
    <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
    <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
    <span class="n">ls</span><span class="o">=</span><span class="s">""</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_xlim</span><span class="p">(</span>
    <span class="n">np</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">df_continent_scenario</span><span class="p">.</span><span class="n">index</span><span class="p">)</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span>
    <span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">df_continent_scenario</span><span class="p">.</span><span class="n">index</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">df_continent_scenario</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">df_continent_scenario</span><span class="p">[</span><span class="s">"continent"</span><span class="p">])</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Continent"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Relative frequency/%"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"Relative frquency of positive respondents per continent"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_49_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_49_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_49_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_49_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The analysis per continent exists very similar frequency of positive respondents per continent, while the biggest differences are between the Americas and Europe and Asia</p> <h2 id="4---modelling">4 - Modelling</h2> <h3 id="41---data-preprocessing">4.1 - Data preprocessing</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_modelling</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span>
        <span class="n">df_shared_data_demographics_clean</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"continent"</span><span class="p">,</span> <span class="s">"country"</span><span class="p">,</span> <span class="s">"scenario"</span><span class="p">]</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"id"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">gender</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s">"gender"</span><span class="p">].</span><span class="n">replace</span><span class="p">({</span>
            <span class="s">"Women"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
            <span class="s">"Men"</span><span class="p">:</span><span class="mi">1</span>
        <span class="p">}),</span>
        <span class="n">education</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">df</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s">"education"</span><span class="p">].</span><span class="n">replace</span><span class="p">({</span>
            <span class="s">"College"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
            <span class="s">"No College"</span><span class="p">:</span><span class="mi">0</span>
        <span class="p">})</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
    <span class="n">df_modelling</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="s">"outcome"</span><span class="p">),</span>
    <span class="n">df_modelling</span><span class="p">[</span><span class="s">"outcome"</span><span class="p">],</span>
    <span class="n">test_size</span><span class="o">=</span><span class="mf">0.25</span><span class="p">,</span>
    <span class="n">stratify</span><span class="o">=</span><span class="n">df_modelling</span><span class="p">[</span><span class="s">"outcome"</span><span class="p">],</span>
    <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">()</span>

<span class="n">X_train_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span>
<span class="n">X_test_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>
</code></pre></div></div> <h3 id="42---model-fitting">4.2 - Model fitting</h3> <h4 id="421---logistic-regression">4.2.1 - Logistic regression</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">logistic_regression_param_grid</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"C"</span><span class="p">:</span><span class="n">np</span><span class="p">.</span><span class="n">logspace</span><span class="p">(</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="p">}</span>

<span class="n">logistic_regression_grid_search</span> <span class="o">=</span> <span class="n">GridSearchCV</span><span class="p">(</span>
    <span class="n">LogisticRegression</span><span class="p">(),</span>
    <span class="n">param_grid</span><span class="o">=</span><span class="n">logistic_regression_param_grid</span><span class="p">,</span>
    <span class="n">scoring</span><span class="o">=</span><span class="s">"roc_auc"</span><span class="p">,</span>
    <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>
    <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span>
<span class="p">)</span>

<span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span>
    <span class="n">X_train_scaled</span><span class="p">,</span>
    <span class="n">y_train</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GridSearchCV(estimator=LogisticRegression(), n_jobs=-1,
             param_grid={'C': array([1.00000000e-06, 2.15443469e-06, 4.64158883e-06, 1.00000000e-05,
       2.15443469e-05, 4.64158883e-05, 1.00000000e-04, 2.15443469e-04,
       4.64158883e-04, 1.00000000e-03])},
             return_train_score=True, scoring='roc_auc')
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span> <span class="mi">11</span><span class="p">))</span>

<span class="n">ax</span><span class="p">.</span><span class="n">errorbar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="mf">0.95</span><span class="o">*</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"param_C"</span><span class="p">].</span><span class="n">data</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_train_score"</span><span class="p">],</span>
    <span class="n">yerr</span><span class="o">=</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_train_score"</span><span class="p">],</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Train"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">errorbar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="mf">1.05</span><span class="o">*</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"param_C"</span><span class="p">].</span><span class="n">data</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_test_score"</span><span class="p">],</span>
    <span class="n">yerr</span><span class="o">=</span><span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_test_score"</span><span class="p">],</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Validation"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mf">0.7</span><span class="p">,</span> <span class="mf">0.73</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"C"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"AUC"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"AUC vs C: bias-variance tradeoff - Logistic regression"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xscale</span><span class="p">(</span><span class="s">"log"</span><span class="p">)</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_59_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_59_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_59_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_59_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h4 id="422---decision-tree">4.2.2 - Decision tree</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">decision_tree_param_grid</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"max_depth"</span><span class="p">:</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="p">}</span>

<span class="n">decision_tree_grid_search</span> <span class="o">=</span> <span class="n">GridSearchCV</span><span class="p">(</span>
    <span class="n">DecisionTreeClassifier</span><span class="p">(),</span>
    <span class="n">param_grid</span><span class="o">=</span><span class="n">decision_tree_param_grid</span><span class="p">,</span>
    <span class="n">scoring</span><span class="o">=</span><span class="s">"roc_auc"</span><span class="p">,</span>
    <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>
    <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span>
<span class="p">)</span>

<span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span>
    <span class="n">X_train_scaled</span><span class="p">,</span>
    <span class="n">y_train</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GridSearchCV(estimator=DecisionTreeClassifier(), n_jobs=-1,
             param_grid={'max_depth': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])},
             return_train_score=True, scoring='roc_auc')
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span> <span class="mi">11</span><span class="p">))</span>

<span class="n">ax</span><span class="p">.</span><span class="n">errorbar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"param_max_depth"</span><span class="p">].</span><span class="n">data</span><span class="o">-</span><span class="mf">0.05</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_train_score"</span><span class="p">],</span>
    <span class="n">yerr</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_train_score"</span><span class="p">],</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Train"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">errorbar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"param_max_depth"</span><span class="p">].</span><span class="n">data</span><span class="o">+</span><span class="mf">0.05</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_test_score"</span><span class="p">],</span>
    <span class="n">yerr</span><span class="o">=</span><span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_test_score"</span><span class="p">],</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Validation"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
<span class="p">)</span>

<span class="c1">#ax.set_ylim(0.7, 0.73)
</span><span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Max depth"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"AUC"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"AUC vs max depth: bias-variance tradeoff - Decision tree"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_62_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_62_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_62_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_62_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h4 id="423---random-forest">4.2.3 - Random forest</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">random_forest_param_grid</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"n_estimators"</span><span class="p">:</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
    <span class="s">"max_depth"</span><span class="p">:</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="p">}</span>

<span class="n">random_forest_grid_search</span> <span class="o">=</span> <span class="n">GridSearchCV</span><span class="p">(</span>
    <span class="n">RandomForestClassifier</span><span class="p">(),</span>
    <span class="n">param_grid</span><span class="o">=</span><span class="n">random_forest_param_grid</span><span class="p">,</span>
    <span class="n">scoring</span><span class="o">=</span><span class="s">"roc_auc"</span><span class="p">,</span>
    <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>
    <span class="n">return_train_score</span><span class="o">=</span><span class="bp">True</span>
<span class="p">)</span>

<span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span>
    <span class="n">X_train_scaled</span><span class="p">,</span>
    <span class="n">y_train</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GridSearchCV(estimator=RandomForestClassifier(), n_jobs=-1,
             param_grid={'max_depth': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10]),
                         'n_estimators': array([ 2,  4,  6,  8, 10])},
             return_train_score=True, scoring='roc_auc')
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_random_forest_grid_search_results</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"params"</span><span class="p">])</span>
    <span class="p">.</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">mean_train_score</span> <span class="o">=</span> <span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_train_score"</span><span class="p">],</span>
        <span class="n">std_train_score</span> <span class="o">=</span> <span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_train_score"</span><span class="p">],</span>
        <span class="n">mean_test_score</span> <span class="o">=</span> <span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"mean_test_score"</span><span class="p">],</span>
        <span class="n">std_test_score</span> <span class="o">=</span> <span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">cv_results_</span><span class="p">[</span><span class="s">"std_test_score"</span><span class="p">],</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span>
    <span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
    <span class="n">ncols</span><span class="o">=</span><span class="n">df_random_forest_grid_search_results</span><span class="p">[</span><span class="s">"n_estimators"</span><span class="p">].</span><span class="n">nunique</span><span class="p">(),</span> 
    <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">)</span>
<span class="p">)</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">n_estimators</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df_random_forest_grid_search_results</span><span class="p">[</span><span class="s">"n_estimators"</span><span class="p">].</span><span class="n">unique</span><span class="p">()):</span>
    <span class="n">df_aux</span> <span class="o">=</span> <span class="n">df_random_forest_grid_search_results</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="sa">f</span><span class="s">"n_estimators == </span><span class="si">{</span><span class="n">n_estimators</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"max_depth"</span><span class="p">]</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"mean_train_score"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"std_train_score"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Train"</span><span class="p">,</span>
        <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"max_depth"</span><span class="p">]</span><span class="o">+</span><span class="mf">0.1</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"mean_test_score"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_aux</span><span class="p">[</span><span class="s">"std_test_score"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">label</span><span class="o">=</span><span class="s">"Test"</span><span class="p">,</span>
        <span class="n">marker</span><span class="o">=</span><span class="s">"o"</span>
    <span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.80</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Max depth"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"AUC"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="sa">f</span><span class="s">"n_estimators = </span><span class="si">{</span><span class="n">n_estimators</span><span class="si">}</span><span class="s">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_66_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_66_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_66_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_66_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The images above display the grid search results for the hyperparameter tuning on the three evaluated algorithms. The best model, chosen for each case, was based on the best AUC performance on the test data from the cross-validation.</p> <h3 id="43---model-comparison">4.3 - Model comparison</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">logistic_regression_model</span> <span class="o">=</span> <span class="n">logistic_regression_grid_search</span><span class="p">.</span><span class="n">best_estimator_</span>
<span class="n">decision_tree_model</span> <span class="o">=</span> <span class="n">decision_tree_grid_search</span><span class="p">.</span><span class="n">best_estimator_</span>
<span class="n">random_forest_model</span> <span class="o">=</span> <span class="n">random_forest_grid_search</span><span class="p">.</span><span class="n">best_estimator_</span>
</code></pre></div></div> <h4 id="431---roc">4.3.1 - ROC</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>
    <span class="n">fpr_logistic_regression</span><span class="p">,</span>
    <span class="n">tpr_logistic_regression</span><span class="p">,</span>
    <span class="n">thr_logistic_regression</span>
<span class="p">)</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span>
    <span class="n">y_test</span><span class="p">,</span>
    <span class="n">logistic_regression_model</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_test_scaled</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>
    <span class="n">fpr_decision_tree</span><span class="p">,</span>
    <span class="n">tpr_decision_tree</span><span class="p">,</span>
    <span class="n">thr_decision_tree</span>
<span class="p">)</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span>
    <span class="n">y_test</span><span class="p">,</span>
    <span class="n">decision_tree_model</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_test_scaled</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span>
    <span class="n">fpr_random_forest</span><span class="p">,</span>
    <span class="n">tpr_random_forest</span><span class="p">,</span>
    <span class="n">thr_random_forest</span>
<span class="p">)</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span>
    <span class="n">y_test</span><span class="p">,</span>
    <span class="n">random_forest_model</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_test_scaled</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">16</span><span class="p">))</span>

<span class="n">ax</span><span class="p">.</span><span class="n">step</span><span class="p">(</span>
    <span class="n">fpr_logistic_regression</span><span class="p">,</span>
    <span class="n">tpr_logistic_regression</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Logistic regression"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">step</span><span class="p">(</span>
    <span class="n">fpr_decision_tree</span><span class="p">,</span>
    <span class="n">tpr_decision_tree</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Decision tree"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">step</span><span class="p">(</span>
    <span class="n">fpr_random_forest</span><span class="p">,</span>
    <span class="n">tpr_random_forest</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"Random forest"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span>
    <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">),</span>
    <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">),</span>
    <span class="n">color</span><span class="o">=</span><span class="s">"k"</span><span class="p">,</span>
    <span class="n">label</span><span class="o">=</span><span class="s">"y=x"</span><span class="p">,</span>
    <span class="n">linestyle</span><span class="o">=</span><span class="s">"--"</span>
<span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"False positive rate"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"True positive rate"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"ROC curve test dataset"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">);</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_74_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_74_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_74_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_74_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Overall, the immediate the evaluation of the ROC curves shows very similar results for the three models. The decision tree model shows a discontinuous behavior probably based on its innate structure. The Logistic Regression seems a little superior to the Random Forest. More metrics, and statistics for it, can lead to a better understanding.</p> <h4 id="432---other-metrics">4.3.2 - Other metrics</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_metrics_confidence_interval</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">N_BOOTSTRAP</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.05</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">X</span><span class="p">).</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">y</span><span class="o">=</span><span class="n">y</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="p">)</span>
    
    <span class="n">auc_results_list</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">precision_results_list</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">recall_results_list</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">f1_results_list</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">N_BOOTSTRAP</span><span class="p">):</span>

        <span class="n">data_sampled</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">sample</span><span class="p">(</span><span class="n">frac</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">replace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

        <span class="n">X_sampled</span> <span class="o">=</span> <span class="n">data_sampled</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="s">"y"</span><span class="p">)</span>
        <span class="n">y_sampled</span> <span class="o">=</span> <span class="n">data_sampled</span><span class="p">[</span><span class="s">"y"</span><span class="p">]</span>

        <span class="n">y_pred</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_sampled</span><span class="p">)</span>
        <span class="n">y_pred_proba</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_sampled</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>

        <span class="n">auc_results_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span>
            <span class="n">roc_auc_score</span><span class="p">(</span>
                <span class="n">y_sampled</span><span class="p">,</span>
                <span class="n">y_pred_proba</span>
            <span class="p">)</span>
        <span class="p">)</span>

        <span class="n">precision_results_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span>
            <span class="n">precision_score</span><span class="p">(</span>
                <span class="n">y_sampled</span><span class="p">,</span>
                <span class="n">y_pred</span>
            <span class="p">)</span>
        <span class="p">)</span>

        <span class="n">recall_results_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span>
            <span class="n">recall_score</span><span class="p">(</span>
                <span class="n">y_sampled</span><span class="p">,</span>
                <span class="n">y_pred</span>
            <span class="p">)</span>
        <span class="p">)</span>

        <span class="n">f1_results_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span>
            <span class="n">f1_score</span><span class="p">(</span>
                <span class="n">y_sampled</span><span class="p">,</span>
                <span class="n">y_pred</span>
            <span class="p">)</span>
        <span class="p">)</span>

    <span class="n">df_results</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span>
        <span class="s">"auc_interval"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">auc_results_list</span><span class="p">,</span> <span class="mi">1</span><span class="o">-</span><span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">auc_results_list</span><span class="p">,</span> <span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)],</span>
        <span class="s">"auc_mean"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">auc_results_list</span><span class="p">)],</span>
        <span class="s">"precision_interval"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">precision_results_list</span><span class="p">,</span> <span class="mi">1</span><span class="o">-</span><span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">precision_results_list</span><span class="p">,</span> <span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)],</span>
        <span class="s">"precision_mean"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">precision_results_list</span><span class="p">)],</span>
        <span class="s">"recall_interval"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">recall_results_list</span><span class="p">,</span> <span class="mi">1</span><span class="o">-</span><span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">recall_results_list</span><span class="p">,</span> <span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)],</span>
        <span class="s">"recall_mean"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">recall_results_list</span><span class="p">)],</span>
        <span class="s">"f1_interval"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">f1_results_list</span><span class="p">,</span> <span class="mi">1</span><span class="o">-</span><span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">f1_results_list</span><span class="p">,</span> <span class="n">alpha</span><span class="o">/</span><span class="mi">2</span><span class="p">)],</span>
        <span class="s">"f1_mean"</span><span class="p">:[</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">f1_results_list</span><span class="p">)]</span>
    <span class="p">})</span>

    <span class="k">return</span> <span class="n">df_results</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model_dict</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"logistic_regression"</span><span class="p">:</span><span class="n">logistic_regression_model</span><span class="p">,</span>
    <span class="s">"decision_tree"</span><span class="p">:</span><span class="n">decision_tree_model</span><span class="p">,</span>
    <span class="s">"random_forest"</span><span class="p">:</span><span class="n">random_forest_model</span>
<span class="p">}</span>

<span class="n">df_list</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">model_name</span><span class="p">,</span> <span class="n">model</span> <span class="ow">in</span> <span class="n">model_dict</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">df_results</span> <span class="o">=</span> <span class="n">get_metrics_confidence_interval</span><span class="p">(</span>
        <span class="n">X_test_scaled</span><span class="p">,</span>
        <span class="n">y_test</span><span class="p">,</span>
        <span class="n">model</span><span class="p">,</span>
        <span class="n">N_BOOTSTRAP</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span>
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.05</span>
    <span class="p">).</span><span class="n">assign</span><span class="p">(</span>
        <span class="n">model</span><span class="o">=</span><span class="n">model_name</span>
    <span class="p">)</span>
    <span class="n">df_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span>
        <span class="n">df_results</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
    <span class="p">)</span>

<span class="n">df_metrics</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">(</span>
    <span class="n">df_list</span>
<span class="p">).</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ncols</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">metric</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">([</span><span class="s">"auc"</span><span class="p">,</span> <span class="s">"precision"</span><span class="p">,</span> <span class="s">"recall"</span><span class="p">,</span> <span class="s">"f1"</span><span class="p">]):</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">errorbar</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_metrics</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span><span class="n">df_metrics</span><span class="p">[</span><span class="n">metric</span><span class="o">+</span><span class="s">"_mean"</span><span class="p">],</span>
        <span class="n">yerr</span><span class="o">=</span><span class="n">df_metrics</span><span class="p">[</span><span class="n">metric</span><span class="o">+</span><span class="s">"_interval"</span><span class="p">],</span>
        <span class="n">color</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">tab10</span><span class="p">.</span><span class="n">colors</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
        <span class="n">ls</span><span class="o">=</span><span class="s">""</span><span class="p">,</span>
        <span class="n">elinewidth</span><span class="o">=</span><span class="mi">3</span>
    <span class="p">)</span>

    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">df_metrics</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">df_metrics</span><span class="p">[</span><span class="s">"model"</span><span class="p">],</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Model"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylabel</span><span class="p">(</span><span class="n">metric</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_ylim</span><span class="p">(</span><span class="mf">0.6</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="n">metric</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'both'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="s">'major'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_79_0-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_79_0-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_79_0-1400.webp"/> <img src="/assets/img/posts/2022-11-20_trolley_problem/trolley_problem_79_0.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The image above displays the main metrics for the three developed models, evaluated on the test dataset. In order to get confidence intervals for it, a bootstrap method was used.</p> <p>One can notice that the decision tree stands as the most difference performance among the models, when looking at precision and recall. However, given its high performance on precision and low result in recall, the F1 score remains very similar to the other two methods.</p> <p>Overall, the choice between the decision forest model and the logistic regression is a difficult one. Given the confidence interval for random forest’s recall is smaller than the others, and it results in satisfactory results for precision, F1 and AUC it is reasonable to choose this strategy as the best on among the evaluated ones.</p> <h2 id="5---final-considerations">5 - Final considerations</h2> <p>For readers who are machine learning aficionados the previous study may seem superficial on some levels:</p> <ul> <li>1: No feature engineering was studied, which could improve the model’s performance</li> <li>2: The only ensemble method tested was random forest, boosting strategies such as LightGBM or XGBoost could lead to better results</li> <li>3: The hyperparameter tuning could be improved with Optuna or similar algorithms</li> </ul> <p>All of these observations are correct, and I hope to return and discuss it on further articles. However, this is not the main reason I have chosen to dwell on this problem.</p> <p>There are two main observations I would like to point from this study. Being a data scientist, I believe the current wave on courses and newcomers often fails to help us build a strong critical sense and truly scientific view of our work. Fitting and predicting is often placed as the main target, the holy grail, the essence of our job. However, this previous study can help us discuss some important topics.</p> <p>With a reasonably simple approach, it was possible to fit the data of interest, leading to acceptable precision results. More specifically, with a precision of nearly 0.7 this model could decide with 70% of precision weather or not to take an action on the trolley dilemma. There are two problems hidden here:</p> <p>First, the model is merely adjusting the data, it is not solving an ethical dilemma. Given the data available, the chosen algorithms have fitted the samples and learned patters from it, but it is not giving answers beyond the basic one: “Given some information about the person (age, gender, political views…) would he or she take an action on the situation proposed?”. I hope you notice how this is closely related to bias in machine learning algorithms. The whole discussion surrounding it often misses the main point: what an algorithm really does. It is just fitting the data, if the data is biased, so would the algorithm. Why? Because the model is not an entity that can “think”, it simply mirrors the patterns in the sample.</p> <p>Second, a very interesting question that could be made about this study surrounds the reasons and causes of the choices. Are men more prone to take action? Does education affect people’s decision? I personally see the discussion about causation very incipient on our community. For those who are unaware, machine learning are not causal, they are associative. They make an excellent job on fitting and predicting, but even explainable AI does not deal with the question on “Why someone took the action?” or “Does variable X cause variable Y?”, it just focuses on justifying how the model is dealing with the input to generate the output. This is an amazing field, don’t get me wrong. Explainable AI is beautiful, important and help us deal with some very troubling questions.</p> <p>Finally, I hope I can motivate you to look beyond simple “.fit() .predict()”. Our job as data scientist involve much more than programming, machine learning or even statistics. We need to cultivate the Science in data science, the ability to look critically at methods and results. This is how we can help advance the barriers of our field, tackle on social problems and use data science (in the words of Alfred Nobel) “for the greatest benefit of mankind”.</p>]]></content><author><name></name></author><category term="ml,"/><category term="statistics"/><summary type="html"><![CDATA[Discussing an ethical dilemma under the lenses of machine learning, understanding its powers and limitations.]]></summary></entry></feed>